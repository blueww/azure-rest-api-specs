{
  "swagger": "2.0",
  "info": {
    "title": "BotFrameworkManagementClient",
    "description": "Bot Framework Management Client",
    "version": "2017-12-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}": {
      "put": {
        "tags": [
          "BotService"
        ],
        "description": "Creates a Bot Service. Bot Service is a resource group wide resource type.",
        "operationId": "PUT BotService",
        "x-ms-examples": {
          "Create Bot": {
            "$ref": "./examples/CreateBot.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BotPutRequest"
            },
            "description": "The parameters to provide for the created bot."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "If resource is created successfully or already existed, the service should return 200 (OK).",
            "schema": {
              "$ref": "#/definitions/BotResponse"
            }
          },
          "201": {
            "description": "If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.",
            "schema": {
              "$ref": "#/definitions/BotResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BotService"
        ],
        "description": "Updates a Bot Service",
        "operationId": "PATCH BotService",
        "x-ms-examples": {
          "Update Bot": {
            "$ref": "./examples/UpdateBot.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/BotPatchRequest"
            },
            "description": "The parameters to provide for the created bot."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "$ref": "#/definitions/BotResponse"
            }
          },
          "201": {
            "description": "If resource is updated successfully, the service should return 201 (Created). Execution to continue asynchronously.",
            "schema": {
              "$ref": "#/definitions/BotResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BotService"
        ],
        "description": "Deletes a Bot Service from the resource group. ",
        "operationId": "DELETE BotService",
        "x-ms-examples": {
          "Delete Bot": {
            "$ref": "./examples/DeleteBot.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "204": {
            "description": "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "BotService"
        ],
        "description": "Returns a BotService specified by the parameters.",
        "operationId": "GET BotService",
        "x-ms-examples": {
          "Get Bot": {
            "$ref": "./examples/GetBot.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "minLength": 2,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "description": "The name of the Bot resource."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "schema": {
              "$ref": "#/definitions/BotResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices": {
      "get": {
        "tags": [
          "BotService"
        ],
        "description": "Returns all the resources of a particular type belonging to a resource group",
        "operationId": "GET BotServicesByResourceGroup",
        "x-ms-examples": {
          "List Bots by Resource Group": {
            "$ref": "./examples/ListBotsByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group within the user's subscription."
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n· skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n· top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n· NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n· Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
            "schema": {
              "$ref": "#/definitions/BotResponseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices": {
      "get": {
        "tags": [
          "BotService"
        ],
        "description": "Returns all the resources of a particular type belonging to a subscription.",
        "operationId": "GET BotsBySubscription",
        "x-ms-examples": {
          "List Bots by Subscription": {
            "$ref": "./examples/ListBotsBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
            "schema": {
              "$ref": "#/definitions/BotResponseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.BotService/operations": {
      "get": {
        "tags": [ "Operations" ],
        "description": "Lists all the available BotService operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Get Operations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/OperationEntityListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ResourceProperties": {
      "description": "Azure resource",
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets or sets the SKU of the resource."
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Required. Gets or sets the Kind of the resource."
        }
      }
    },
    "Sku": {
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The sku name"
        },
        "tier": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the sku tier. This is based on the SKU name.",
          "enum": [
            "Free",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          }
        }
      },
      "required": [
        "name"
      ],
      "description": "The SKU of the cognitive services account."
    },
    "SkuName": {
      "type": "string",
      "description": "The name of SKU.",
      "enum": [
        "F0",
        "S1"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true
      }
    },
    "Kind": {
      "type": "string",
      "description": "Indicates the type of bot service",
      "enum": [
        "sdk",
        "designer",
        "bot",
        "function"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true
      }
    },
    "BotPutRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProperties"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BotPutRequestProperties",
          "description": "The set of properties specific to a put request for a bot"
        }
      },
      "required": [ "properties" ]
    },
    "BotPutRequestProperties": {
      "type": "object",
      "description": "The set of properties specific to the Bot Service put request",
      "properties": {
        "botHandle": {
          "type": "string",
          "description": "Unique Id for the bot"
        },
        "description": {
          "type": "string",
          "description": "The description of the bot"
        },
        "developerAppInsightKey": {
          "type": "string",
          "description": "The Application Insights key"
        },
        "developerAppInsightsApiKey": {
          "type": "string",
          "description": "The Application Insights Api Key"
        },
        "developerAppInsightsApplicationId": {
          "type": "string",
          "description": "The Application Insights App Id"
        },
        "displayName": {
          "type": "string",
          "description": "The Name of the bot"
        },
        "endpoint": {
          "type": "string",
          "description": "The bot's endpoint"
        },
        "iconUrl": {
          "type": "string",
          "description": "The Icon Url of the bot"
        },
        "luisAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Collection of LUIS App Ids"
        },
        "luisKey": {
          "type": "string",
          "description": "The LUIS Key"
        },
        "msaAppId": {
          "type": "string",
          "description": "Microsoft App Id for the bot"
        }
      },
      "required": [
        "botHandle",
        "displayName",
        "endpoint",
        "msaAppId"
      ]
    },
    "BotPatchRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProperties"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BotPatchRequestProperties",
          "description": "The set of properties specific to a patch request for a bot"
        }
      }
    },
    "BotPatchRequestProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The Name of the bot"
        },
        "description": {
          "type": "string",
          "description": "The description of the bot"
        },
        "iconUrl": {
          "type": "string",
          "description": "The Icon Url of the bot"
        },
        "endpoint": {
          "type": "string",
          "description": "The bot's endpoint"
        },
        "msaAppId": {
          "type": "string",
          "description": "Microsoft App Id for the bot"
        },
        "developerAppInsightKey": {
          "type": "string",
          "description": "The Application Insights key"
        },
        "developerAppInsightsApiKey": {
          "type": "string",
          "description": "The Application Insights Api Key"
        },
        "developerAppInsightsApplicationId": {
          "type": "string",
          "description": "The Application Insights App Id"
        },
        "luisAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Collection of LUIS App Ids"
        },
        "luisKey": {
          "type": "string",
          "description": "The LUIS Key"
        }
      },
      "description": "The parameters to provide for the Bot.",
      "required": [
        "displayName",
        "endpoint",
        "msaAppId"
      ]
    },
    "BotResponse": {
      "type": "object",
      "description": "Response of a bot object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceProperties"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BotResponseProperties",
          "description": "The set of properties specific to bot response"
        }
      },
      "required": [ "properties" ],
      "x-ms-azure-resource": true
    },
    "BotResponseProperties": {
      "properties": {
        "botHandle": {
          "type": "string",
          "description": "Unique Id for the bot"
        },
        "displayName": {
          "type": "string",
          "description": "The Name of the bot"
        },
        "description": {
          "type": "string",
          "description": "The description of the bot"
        },
        "iconUrl": {
          "type": "string",
          "description": "The Icon Url of the bot"
        },
        "endpoint": {
          "type": "string",
          "description": "The bot's endpoint"
        },
        "endpointVersion": {
          "type": "string",
          "description": "The bot's endpoint version"
        },
        "msaAppId": {
          "type": "string",
          "description": "Microsoft App Id for the bot"
        },
        "eTag": {
          "type": "string",
          "description": "The bot etag used for concurrency"
        },
        "configuredChannels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Collection of channels for which the bot is configured"
        },
        "enabledChannels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Collection of channels for which the bot is enabled"
        },
        "developerAppInsightKey": {
          "type": "string",
          "description": "The Application Insights key"
        },
        "developerAppInsightsApplicationId": {
          "type": "string",
          "description": "The Application Insights App Id"
        },
        "luisAppIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Collection of LUIS App Ids"
        }
      },
      "description": "The parameters to provide for the Bot.",
      "required": [
        "botHandle",
        "displayName",
        "endpoint",
        "endpointVersion",
        "msaAppId"
      ]
    },
    "BotResponseList": {
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of bot service resources.",
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/BotResponse"
          },
          "description": "Gets the list of bot service results and their properties."
        }
      },
      "description": "The list of  bot service operation response."
    },
    "Error": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorBody",
          "description": "The error body."
        }
      },
      "description": "Bot Service error object."
    },
    "ErrorBody": {
      "properties": {
        "code": {
          "type": "string",
          "description": "error code"
        },
        "message": {
          "type": "string",
          "description": "error message"
        }
      },
      "description": "Bot Service error body.",
      "required": [
        "code",
        "message"
      ]
    },
    "OperationEntityListResult": {
      "description": "The list of bot service operation response.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of operations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationEntity"
          }
        }
      }
    },
    "OperationEntity": {
      "description": "The operations supported by Bot Service Management.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplayInfo",
          "description": "The operation supported by Bot Service Management."
        },
        "origin": {
          "description": "The origin of the operation.",
          "type": "string"
        },
        "properties": {
          "description": "Additional properties.",
          "type": "object"
        }
      }
    },
    "OperationDisplayInfo": {
      "description": "The operation supported by Bot Service Management.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the operation.",
          "type": "string"
        },
        "operation": {
          "description": "The action that users can perform, based on their permission level.",
          "type": "string"
        },
        "provider": {
          "description": "Service provider: Microsoft Bot Service.",
          "type": "string"
        },
        "resource": {
          "description": "Resource on which the operation is performed.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Azure Subscription ID.",
      "required": true,
      "type": "string"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request. Current version is 2017-12-01"
    }
  }
}